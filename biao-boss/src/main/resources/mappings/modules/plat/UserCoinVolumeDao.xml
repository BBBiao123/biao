<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.plat.dao.UserCoinVolumeDao">
    
	<sql id="userCoinVolumeColumns">
		a.id AS "id",
		a.user_id AS "userId",
		a.coin_id AS "coinId",
		a.coin_symbol AS "coinSymbol",
		a.volume AS "volume",
		a.lock_volume AS "lockVolume",
		a.out_lock_volume AS "outLockVolume",
		a.create_date AS "createDate",
		a.update_date AS "updateDate",
		a.create_by AS "createBy.id",
		a.update_by AS "updateBy.id"
	</sql>

	<sql id="userCoinVolumeColumnsFindList">
		a.id AS "id",
		a.user_id AS "userId",
		b.mail AS "mail",
		b.mobile AS "mobile",
		a.coin_id AS "coinId",
		a.coin_symbol AS "coinSymbol",
		a.volume AS "volume",
		a.lock_volume AS "lockVolume",
		a.out_lock_volume AS "outLockVolume",
		a.create_date AS "createDate",
		a.update_date AS "updateDate",
		a.create_by AS "createBy.id",
		a.update_by AS "updateBy.id"
	</sql>
	
	<sql id="userCoinVolumeJoins">
	</sql>
    
	<select id="get" resultType="UserCoinVolume">
		SELECT 
			<include refid="userCoinVolumeColumns"/>
		FROM js_plat_user_coin_volume a
		<include refid="userCoinVolumeJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="UserCoinVolume">
		SELECT 
			<include refid="userCoinVolumeColumnsFindList"/>
		FROM js_plat_user_coin_volume a, js_plat_user b
		<include refid="userCoinVolumeJoins"/>
		<where>
			a.user_id = b.id
			<if test="mail != null and mail != ''">
				AND b.mail LIKE concat(#{mail},'%')
			</if>
			<if test="mobile != null and mobile != ''">
				AND b.mobile LIKE concat(#{mobile},'%')
			</if>
			<if test="coinSymbol != null and coinSymbol != ''">
				AND a.coin_symbol= #{coinSymbol}
			</if>
			<if test="coinId != null and coinId != ''">
				AND a.coin_Id= #{coinId}
			</if>
			<if test="userId != null and userId != ''">
				AND a.user_id = #{userId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	
	<select id="findUserVolumeList" resultType="UserCoinVolume">
		SELECT 
			<include refid="userCoinVolumeColumns"/>
		FROM js_plat_user_coin_volume a
		<where>
			<if test="coinSymbol != null and coinSymbol != ''">
				AND a.coin_symbol= #{coinSymbol}
			</if>
			<if test="coinId != null and coinId != ''">
				AND a.coin_Id= #{coinId}
			</if>
			<if test="userId != null and userId != ''">
				AND a.user_id = #{userId}
			</if>
		</where>
	</select>
	
	<select id="findAllList" resultType="UserCoinVolume">
		SELECT 
			<include refid="userCoinVolumeColumns"/>
		FROM js_plat_user_coin_volume a
		<include refid="userCoinVolumeJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>


	<select id="findByUserIdAndCoinId" resultType="UserCoinVolume">
		SELECT
		<include refid="userCoinVolumeColumns"/>
		FROM js_plat_user_coin_volume a
		<include refid="userCoinVolumeJoins"/>
		<where>
			a.user_id = #{userId}
			AND a.coin_id =#{coinId}
		</where>

	</select>

	<select id="findCoinVolumeStat" resultType="CoinVolumeStat">
		SELECT
			f1.coin_symbol,
			f1.volume,
			f1.lock_volume,
			f1.c2c_volume,
			f1.total_volume,
			ifnull(f2.deposit_volume, 0) AS deposit_volume,
			ifnull(f2.withdraw_volume, 0) AS withdraw_volume,
			ifnull(f1.total_volume, 0) + ifnull(f2.withdraw_volume, 0) - ifnull(f2.deposit_volume, 0) AS balance_volume
		FROM
			(
				SELECT
					coin_symbol,
					sum(volume) AS volume,
					sum(lock_volume) AS lock_volume,
					sum(ifnull(c2c_volume, 0)) AS c2c_volume,
					sum(
						total_volume + ifnull(c2c_volume, 0)
					) AS total_volume
				FROM
					(
						(
							SELECT
								coin_symbol AS coin_symbol,
								sum(volume) AS volume,
								sum(lock_volume) AS lock_volume,
								0 AS c2c_volume,
								sum(volume + lock_volume) AS total_volume
							FROM
								js_plat_user_coin_volume v
							GROUP BY
								coin_symbol
						)
						UNION
							(
								SELECT
									'USDT' AS coin_symbol,
									0 AS volume,
									0 AS lock_volume,
									sum(
										volume + advert_volume + lock_volume
									) AS c2c_volume,
									0 AS total_volume
								FROM
									js_plat_offline_coin_volume
								WHERE
									coin_symbol = 'USDT'
							)
					) AS f
				GROUP BY
					coin_symbol
			) AS f1
		LEFT JOIN (
			SELECT
				coin_symbol AS coin_symbol,
				sum(deposit_volume) AS deposit_volume,
				sum(withdraw_volume) AS withdraw_volume
			FROM
				(
					(
						SELECT
							coin_symbol AS coin_symbol,
							sum(volume) AS deposit_volume,
							0 AS withdraw_volume
						FROM
							js_plat_user_deposit_log
						WHERE
							STATUS = 1
						GROUP BY
							coin_symbol
					)
					UNION
						(
							SELECT
								coin_symbol AS coin_symbol,
								0 AS deposit_volume,
								sum(volume) AS withdraw_volume
							FROM
								js_plat_user_withdraw_log
							WHERE
								STATUS IN (0, 1, 3)
							GROUP BY
								coin_symbol
						)
				) AS t2
			GROUP BY
				coin_symbol
		) AS f2 ON f1.coin_symbol = f2.coin_symbol

	</select>


	<insert id="insert">
		INSERT INTO js_plat_user_coin_volume(
			id,
			user_id,
			coin_id,
			coin_symbol,
			volume,
			lock_volume,
			out_lock_volume,
			create_date,
			update_date,
			create_by,
			update_by
		) VALUES (
			#{id},
			#{userId},
			#{coinId},
			#{coinSymbol},
			#{volume},
			#{lockVolume},
			#{outLockVolume},
			#{createDate},
			#{updateDate},
			#{createBy.id},
			#{updateBy.id}
		)
	</insert>
	
	<update id="update">
		UPDATE js_plat_user_coin_volume SET 	
			user_id = #{userId},
			coin_id = #{coinId},
			coin_symbol = #{coinSymbol},
			volume = #{volume},
			lock_volume = #{lockVolume},
			out_lock_volume = #{outLockVolume},
			update_date = #{updateDate},
			update_by = #{updateBy.id}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM js_plat_user_coin_volume
		WHERE id = #{id}
	</update>
	
</mapper>