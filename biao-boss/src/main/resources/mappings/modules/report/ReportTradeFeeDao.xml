<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.report.dao.ReportTradeFeeDao">
    
	<sql id="reportTradeFeeColumns">
		a.id AS "id",
		a.coin_main AS "coinMain",
		a.coin_other AS "coinOther",
		a.sum_fee AS "sumFee",
		a.count_time AS "countTime",
		a.coin AS "coin",
		a.create_time AS "createTime"
	</sql>
	
	<sql id="reportTradeFeeJoins">
	</sql>
    
	<select id="get" resultType="ReportTradeFee">
		SELECT 
			<include refid="reportTradeFeeColumns"/>
		FROM report_trade_fee a
		<include refid="reportTradeFeeJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="ReportTradeFee">
		SELECT 
			<include refid="reportTradeFeeColumns"/>
		FROM report_trade_fee a
		<include refid="reportTradeFeeJoins"/>
		<where>
			
			<if test="coinMain != null and coinMain != ''">
				AND a.coin_main = #{coinMain}
			</if>
			<if test="coinOther != null and coinOther != ''">
				AND a.coin_other = #{coinOther}
			</if>
			<if test="countTime != null and countTime != ''">
				AND a.count_time = #{countTime}
			</if>
			<if test="coin != null and coin != ''">
				AND a.coin = #{coin}
			</if>
			<if test="createTime != null and createTime != ''">
				AND a.create_time = #{createTime}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="ReportTradeFee">
		SELECT 
			<include refid="reportTradeFeeColumns"/>
		FROM report_trade_fee a
		<include refid="reportTradeFeeJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO report_trade_fee(
			id,
			coin_main,
			coin_other,
			sum_fee,
			count_time,
			coin,
			create_time
		) VALUES (
			#{id},
			#{coinMain},
			#{coinOther},
			#{sumFee},
			#{countTime},
			#{coin},
			#{createTime}
		)
	</insert>
	
	<update id="update">
		UPDATE report_trade_fee SET 	
			coin_main = #{coinMain},
			coin_other = #{coinOther},
			sum_fee = #{sumFee},
			count_time = #{countTime},
			coin = #{coin},
			create_time = #{createTime}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM report_trade_fee
		WHERE id = #{id}
	</update>
	
</mapper>