# 默认的profile为dev，其他环境通过指定启动参数使用不同的profile，比如：
#   测试环境：java -jar my-spring-boot.jar --spring.profiles.active=test
#   生产环境：java -jar my-spring-boot.jar --spring.profiles.active=prod

server:
    port: 8088
management:
    health:
        mail:
            enabled: false
info:
    app:
        name: "@project.name@" #从pom.xml中获取
        description: "@project.description@"
        version: "@project.version@"
        spring-boot-version: "@project.parent.version@"

spring:
    dev_model: false
    output:
        ansi:
            enabled: always
    messages:
        basename: /i18n/message
    profiles:
        active: dev
    datasource:
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/bbex?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&zeroDateTimeBehavior=convertToNull&useSSL=false
        username: photoadmin
        password: Photo123456
        hikari:
            maxLifetime: 1765000 #一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒以上
            maximumPoolSize: 15 #连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count)
    data:
        mongodb:
            host: 127.0.0.1
            port: 27017
            database: photo
            authentication-database: photo
            username: photoadmin
            password: photoadmin
            reactive-repositories:
                enabled: true

    redis:
        #    password: foobaredbbexONE123
        host: 127.0.0.1
        port: 6379
    kafka:
        producer:
            value-serializer: com.biao.kafka.interceptor.CustomerJsonSerializer
            properties:
                interceptor.classes: com.biao.kafka.interceptor.KafkaMessageIdGenerator
                partitioner.class: com.biao.kafka.interceptor.CustomerPartitioner
        bootstrap-servers:
            - 127.0.0.1:9092
        consumer:
            value-deserializer: com.biao.kafka.interceptor.CustomerJsonDeserializer
            group-id: trade
            auto-offset-reset: earliest
            properties:
                spring:
                    json:
                        trusted:
                            packages: com.biao.pojo,com.biao.kafka.interceptor,com.biao.previous
    jackson:
        serialization:
            WRITE_DATES_AS_TIMESTAMPS: false


biao:
    mail[0]:
        password: Service123456
        username: service@coceu.com
        alias: coceu
        sendname: service@coceu.com
        auth: true
        host: smtp.coceu.com
        openssl: true
        port: 25

mybatis:
    typeAliasesPackage: com.biao.entity
    configLocation: classpath:mybatis/mybatis-config.xml

inviteCodes: 8866
access:
    keyId:
        conf:
    keySecret:
        conf:
    signName:
    templat:
logging:
    level:
        root: info
        org.springframework.boot: info
        org.springframework.kafka: info
        org.apache.ibatis: info
        com.bbex.bonuspoint: info
        com.bbex.lottery: info
        com.bbex: info
        io.netty: info
    path: "./logs"
    config: classpath:logback.xml



    