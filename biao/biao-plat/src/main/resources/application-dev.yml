# 默认的profile为dev，其他环境通过指定启动参数使用不同的profile，比如：z
#   测试环境：java -jar my-spring-boot.jar --spring.profiles.active=test
#   生产环境：java -jar my-spring-boot.jar --spring.profiles.active=prod

server:
  port: 8083
management:
  health:
    mail:
      enabled: false
info:
  app:
    name: "@project.name@" #从pom.xml中获取
    description: "@project.description@"
    version: "@project.version@"
    spring-boot-version: "@project.parent.version@"

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://rm-j6c6mdh161ts3o52bco.mysql.rds.aliyuncs.com:3306/bbex?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false
    username: photoadmin
    password: Photo123456
    hikari:
      maxLifetime: 1765000 #一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒以上
      maximumPoolSize: 15 #连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count)
  data:
    mongodb:
        host: dds-j6c4cb1c77b752a41823-pub.mongodb.rds.aliyuncs.com
        port: 3717
        database: photo
        authentication-database: photo
        username: photoadmin
        password: photoadmin
        reactive-repositories:
                enabled: true

  redis:
    password: foobaredbbexONE123
    host: 47.244.153.103
    port: 6379


  kafka:
    producer:
      value-serializer: com.biao.kafka.interceptor.CustomerJsonSerializer
      properties:
        interceptor.classes: com.biao.kafka.interceptor.KafkaMessageIdGenerator
    bootstrap-servers:
      - 47.244.153.103:9092
    consumer:
      value-deserializer: com.biao.kafka.interceptor.CustomerJsonDeserializer
      group-id: trade
      auto-offset-reset: earliest
      properties:
        partitioner.expair: 0-7,8-15,16-23,24-31,32-39,40-47,48-55,56-63
        spring:
          json:
            trusted:
              packages: com.biao.listener.kafka,com.biao.kafka.interceptor,com.biao.pojo
  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false

mybatis:
  typeAliasesPackage: com.biao.entity
  configLocation: classpath:mybatis/mybatis-config.xml

coin:
  main:
    list:
      - USDT
#      - BTC
#      - ETH

biao:
  mail[0]:
    password: Service123456
    username: service@coceu.com
    alias: coceu
    sendname: service@coceu.com
    auth: true
    host: smtp.coceu.com
    openssl: true
    port: 25
    mailSuffix: 163.com

password:
  resetUrl: https://www.coceu.com/reset/mail
register:
  switch: 1


inviteCodes:

google:
  domain: biao

relayPrizeTime: 20

neo4j:
  uri: bolt://47.244.153.103:7687
  username: neo4j
  password: biao123456
#hua kuai
aliyun:
  authenticatesig:
    accessKeyId: LTAIeVlMi4NlO4qA
    accessKeySecret: sM7tcsCdiOyLMvXGa9t6fIKvtTeDyu

user:
  config:
    lockLength: 0
    secretFreeQuota: 0
    lastVersion: 300
    isForceUpdate: 1
    exRate: 7.2
  coin-volume-bill:
    #     执行的节点数量
    needs: 1
    #      当前是几号节点，不要重复哦.
    need: 1
    #      执行时间S
    time: 5
    #是否启动task;
    taskFlag: true
balance:
  oneDayRate: 0.0025
  secondDayRate: 0.003
  threeDayRate: 0.004
  equalReward: 0.1
  rewardDateStr: 2019-08-01 20:00:00
  coinSmybol: BTC,ETH,USDT,LTC
  rewardNum: 100

logging:
  level:
    root: info
    org.springframework.boot: error
    org.apache.ibatis: info
    com.bbex.bonuspoint: error
    com.bbex.lottery: error
    com.bbex: info
    io.netty: info
  path: "./logs"
  config: classpath:logback.xml

